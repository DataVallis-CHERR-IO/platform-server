{"id":"3d0448621a560de7a201adf2ddedd9b2","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"src/web3/contracts/CherrioProjectLock.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n///**\n// * @title SafeMath\n// * @dev Math operations with safety checks that throw on error\n// */\n//library SafeMath {\n//    function mul(uint256 a, uint256 b) internal pure returns(uint256) {\n//        uint256 c = a * b;\n//        assert(a == 0 || c / a == b);\n//\n//        return c;\n//    }\n//\n//    function div(uint256 a, uint256 b) internal pure returns(uint256) {\n//        // assert(b > 0); // Solidity automatically throws when dividing by 0\n//        uint256 c = a / b;\n//\n//        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n//        return c;\n//    }\n//\n//    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\n//        assert(b <= a);\n//\n//        return a - b;\n//    }\n//\n//    function add(uint256 a, uint256 b) internal pure returns(uint256) {\n//        uint256 c = a + b;\n//        assert(c >= a);\n//\n//        return c;\n//    }\n//}\n//\n///**\n// * @title Owner\n// * @dev Set & change owner\n// */\n//contract Owner {\n//    address private owner;\n//\n//    // event for EVM logging\n//    event OwnerSet(address indexed oldOwner, address indexed newOwner);\n//\n//    // modifier to check if caller is owner\n//    modifier isOwner() {\n//        // If the first argument of 'require' evaluates to 'false', execution terminates and all\n//        // changes to the state and to Ether balances are reverted.\n//        // This used to consume all gas in old EVM versions, but not anymore.\n//        // It is often a good idea to use 'require' to check if functions are called correctly.\n//        // As a second argument, you can also provide an explanation about what went wrong.\n//        require(msg.sender == owner, \"Caller is not owner\");\n//        _;\n//    }\n//\n//    /**\n//     * @dev Set contract deployer as owner\n//     */\n//    constructor() {\n//        console.log(\"Owner contract deployed by:\", msg.sender);\n//        owner = msg.sender; // 'msg.sender' is sender of current call, contract deployer for a constructor\n//        emit OwnerSet(address(0), owner);\n//    }\n//\n//    /**\n//     * @dev Change owner\n//     * @param newOwner address of new owner\n//     */\n//    function changeOwner(address newOwner) public isOwner {\n//        emit OwnerSet(owner, newOwner);\n//        owner = newOwner;\n//    }\n//\n//    /**\n//     * @dev Return owner address\n//     * @return address of owner\n//     */\n//    function getOwner() external view returns (address) {\n//        return owner;\n//    }\n//}\n\ninterface ICherrioProjectTest {\n    function counter() external view returns (uint8);\n    function increment() external;\n}\n\ncontract CherrioProjectLock {\n//    using SafeMath for uint256;\n\n    address cherrioProjectTest;\n//    uint256 private pool;\n\n    constructor(address counterAddress) {\n        cherrioProjectTest = counterAddress;\n    }\n\n//    struct Project {\n//        Stages stage;\n//        bool flag;\n//        uint256 lockSize;\n//        uint256 lockedAmount;\n//        mapping(address => uint256) lockers;\n//    }\n//\n//    enum Stages {\n//        Pending,\n//        InProgress,\n//        Ended\n//    }\n//\n//    Stages public stage;\n//\n//    mapping(address => Project) public projects;\n\n    function counterIncrement() external {\n        ICherrioProjectTest(cherrioProjectTest).increment();\n    }\n\n//    function addProject(address _address, uint256 _lockSize, Stages _stage) external isOwner {\n//        require(!projects[_address].flag);\n//\n//        projects[_address].flag = true;\n//        projects[_address].stage = _stage;\n//        projects[_address].lockSize = _lockSize;\n//        projects[_address].lockedAmount = 0;\n//    }\n//\n//    function lock(address _address) public {\n//        require(projects[_address].flag);\n//        require(projects[_address].stage != Stages.Ended);\n//\n//        if (projects[_address].lockers[msg.sender] > 0) {\n//            projects[_address].lockers[msg.sender] += msg.value;\n//        } else {\n//            projects[_address].lockers[msg.sender] = msg.value;\n//        }\n//\n//        projects[_address].lockedAmount += msg.value;\n//\n//        if (projects[_address].lockedAmount >= projects[_address].lockSize) {\n//            projects[_address].stage = Stages.Ended;\n//        }\n//    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"src/web3/contracts/CherrioProjectLock.sol":{"ast":{"absolutePath":"src/web3/contracts/CherrioProjectLock.sol","exportedSymbols":{"CherrioProjectLock":[34],"ICherrioProjectTest":[11]},"id":35,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"ICherrioProjectTest","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"963:6:0","text":"**"},"fullyImplemented":false,"id":11,"linearizedBaseContracts":[11],"name":"ICherrioProjectTest","nameLocation":"2531:19:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"61bc221a","id":7,"implemented":false,"kind":"function","modifiers":[],"name":"counter","nameLocation":"2566:7:0","nodeType":"FunctionDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"2573:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7,"src":"2599:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4,"name":"uint8","nodeType":"ElementaryTypeName","src":"2599:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2598:7:0"},"scope":11,"src":"2557:49:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d09de08a","id":10,"implemented":false,"kind":"function","modifiers":[],"name":"increment","nameLocation":"2620:9:0","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[],"src":"2629:2:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[],"src":"2640:0:0"},"scope":11,"src":"2611:30:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":35,"src":"2521:122:0","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"CherrioProjectLock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":34,"linearizedBaseContracts":[34],"name":"CherrioProjectLock","nameLocation":"2654:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":13,"mutability":"mutable","name":"cherrioProjectTest","nameLocation":"2722:18:0","nodeType":"VariableDeclaration","scope":34,"src":"2714:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"2714:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"body":{"id":22,"nodeType":"Block","src":"2811:52:0","statements":[{"expression":{"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18,"name":"cherrioProjectTest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2821:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":19,"name":"counterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"2842:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2821:35:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":21,"nodeType":"ExpressionStatement","src":"2821:35:0"}]},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"counterAddress","nameLocation":"2795:14:0","nodeType":"VariableDeclaration","scope":23,"src":"2787:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"2787:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2786:24:0"},"returnParameters":{"id":17,"nodeType":"ParameterList","parameters":[],"src":"2811:0:0"},"scope":34,"src":"2775:88:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":32,"nodeType":"Block","src":"3262:68:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":27,"name":"cherrioProjectTest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"3292:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":26,"name":"ICherrioProjectTest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"3272:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICherrioProjectTest_$11_$","typeString":"type(contract ICherrioProjectTest)"}},"id":28,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3272:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICherrioProjectTest_$11","typeString":"contract ICherrioProjectTest"}},"id":29,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":10,"src":"3272:49:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3272:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":31,"nodeType":"ExpressionStatement","src":"3272:51:0"}]},"functionSelector":"60598c01","id":33,"implemented":true,"kind":"function","modifiers":[],"name":"counterIncrement","nameLocation":"3234:16:0","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[],"src":"3250:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"3262:0:0"},"scope":34,"src":"3225:105:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":35,"src":"2645:1625:0","usedErrors":[]}],"src":"32:4239:0"},"id":0}},"contracts":{"src/web3/contracts/CherrioProjectLock.sol":{"CherrioProjectLock":{"abi":[{"inputs":[{"internalType":"address","name":"counterAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"counterIncrement","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":198,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":219,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":157,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":125,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":120,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":175,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:1","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:1","statements":[{"nodeType":"YulAssignment","src":"57:19:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:1","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:1"},"nodeType":"YulFunctionCall","src":"67:9:1"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:1"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:1","type":""}],"src":"7:75:1"},{"body":{"nodeType":"YulBlock","src":"177:28:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:1"},"nodeType":"YulFunctionCall","src":"187:12:1"},"nodeType":"YulExpressionStatement","src":"187:12:1"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:1"},{"body":{"nodeType":"YulBlock","src":"300:28:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:1"},"nodeType":"YulFunctionCall","src":"310:12:1"},"nodeType":"YulExpressionStatement","src":"310:12:1"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:1"},{"body":{"nodeType":"YulBlock","src":"379:81:1","statements":[{"nodeType":"YulAssignment","src":"389:65:1","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:1","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:1"},"nodeType":"YulFunctionCall","src":"400:54:1"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:1"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:1","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:1","type":""}],"src":"334:126:1"},{"body":{"nodeType":"YulBlock","src":"511:51:1","statements":[{"nodeType":"YulAssignment","src":"521:35:1","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:1"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:1"},"nodeType":"YulFunctionCall","src":"532:24:1"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:1"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:1","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:1","type":""}],"src":"466:96:1"},{"body":{"nodeType":"YulBlock","src":"611:79:1","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:1"},"nodeType":"YulFunctionCall","src":"670:12:1"},"nodeType":"YulExpressionStatement","src":"670:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:1"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:1"},"nodeType":"YulFunctionCall","src":"641:24:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:1"},"nodeType":"YulFunctionCall","src":"631:35:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:1"},"nodeType":"YulFunctionCall","src":"624:43:1"},"nodeType":"YulIf","src":"621:63:1"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:1","type":""}],"src":"568:122:1"},{"body":{"nodeType":"YulBlock","src":"759:80:1","statements":[{"nodeType":"YulAssignment","src":"769:22:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:1"},"nodeType":"YulFunctionCall","src":"778:13:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:1"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:1"},"nodeType":"YulFunctionCall","src":"800:33:1"},"nodeType":"YulExpressionStatement","src":"800:33:1"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:1","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:1","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:1","type":""}],"src":"696:143:1"},{"body":{"nodeType":"YulBlock","src":"922:274:1","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:1"},"nodeType":"YulFunctionCall","src":"970:79:1"},"nodeType":"YulExpressionStatement","src":"970:79:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:1"},"nodeType":"YulFunctionCall","src":"939:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:1"},"nodeType":"YulFunctionCall","src":"935:32:1"},"nodeType":"YulIf","src":"932:119:1"},{"nodeType":"YulBlock","src":"1061:128:1","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:1","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:1","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:1","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:1"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:1"},"nodeType":"YulFunctionCall","src":"1147:22:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:1"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:1"},"nodeType":"YulFunctionCall","src":"1115:64:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:1"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:1","type":""}],"src":"845:351:1"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":1,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610201380380610201833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b60eb806101166000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806360598c0114602d575b600080fd5b60336035565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d09de08a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015609c57600080fd5b505af115801560af573d6000803e3d6000fd5b5050505056fea264697066735822122051526c3259572a183b3c6e067492f4af5b0a218a08f40e7997729652b78bf67064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x201 CODESIZE SUB DUP1 PUSH2 0x201 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xEB DUP1 PUSH2 0x116 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60598C01 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD09DE08A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH1 0xAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD MSTORE PUSH13 0x3259572A183B3C6E067492F4AF JUMPDEST EXP 0x21 DUP11 ADDMOD DELEGATECALL 0xE PUSH26 0x97729652B78BF67064736F6C6343000809003300000000000000 ","sourceMap":"2645:1625:0:-:0;;;2775:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2842:14;2821:18;;:35;;;;;;;;;;;;;;;;;;2775:88;2645:1625;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;2645:1625:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@counterIncrement_33":{"entryPoint":53,"id":33,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052348015600f57600080fd5b506004361060285760003560e01c806360598c0114602d575b600080fd5b60336035565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d09de08a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015609c57600080fd5b505af115801560af573d6000803e3d6000fd5b5050505056fea264697066735822122051526c3259572a183b3c6e067492f4af5b0a218a08f40e7997729652b78bf67064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60598C01 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD09DE08A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH1 0xAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD MSTORE PUSH13 0x3259572A183B3C6E067492F4AF JUMPDEST EXP 0x21 DUP11 ADDMOD DELEGATECALL 0xE PUSH26 0x97729652B78BF67064736F6C6343000809003300000000000000 ","sourceMap":"2645:1625:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3225:105;;;:::i;:::-;;;3292:18;;;;;;;;;;3272:49;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3225:105::o"},"methodIdentifiers":{"counterIncrement()":"60598c01"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"counterAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"counterIncrement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/web3/contracts/CherrioProjectLock.sol\":\"CherrioProjectLock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/web3/contracts/CherrioProjectLock.sol\":{\"keccak256\":\"0xb2bcb02c7eb797b352dcce68931a4bf01297e6ca9ec06f1cb3c47216eff42a8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa4ebdcc42289f85724a3f667bcd83c220225b6b2f4297f9706177207d944941\",\"dweb:/ipfs/Qmc6Gqgxx6qBmfz9Dmj5ze2FCHsUKFMf1rAX67fEMkv5mM\"]}},\"version\":1}"},"ICherrioProjectTest":{"abi":[{"inputs":[],"name":"counter","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"increment","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"counter()":"61bc221a","increment()":"d09de08a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"**\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/web3/contracts/CherrioProjectLock.sol\":\"ICherrioProjectTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/web3/contracts/CherrioProjectLock.sol\":{\"keccak256\":\"0xb2bcb02c7eb797b352dcce68931a4bf01297e6ca9ec06f1cb3c47216eff42a8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa4ebdcc42289f85724a3f667bcd83c220225b6b2f4297f9706177207d944941\",\"dweb:/ipfs/Qmc6Gqgxx6qBmfz9Dmj5ze2FCHsUKFMf1rAX67fEMkv5mM\"]}},\"version\":1}"}}}}}